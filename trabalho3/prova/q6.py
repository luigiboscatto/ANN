import math

def rk4(f, x0, y0,x_values, n):
    r = []
    h = x_values[0] - x0
    for _ in range(n):
        #realizar as iterações
        if (_>=1):
            h = x_values[_] - x_values[_-1]
        m1 = f(x0, y0)
        m2 = f(x0 + h/2, y0 + (h/2)*m1)
        m3 = f(x0 + h/2, y0 + (h/2)*m2)
        m4 = f(x0 + h, y0 + h *m3)
        yk = y0 + h * (m1+2*m2+2*m3+m4)/6
        #atualizando os valores
        x0 = x_values[_]
        y0 = yk
        #colocando valores na lista
        r.append((x0, y0))
    return r
    
# modificar valores de r e lambd    
def f(p, t):
    r = 0.1842 
    lambd = 0.02224
    k = r * lambd
    return k * (1 - t)

# modificar valor de p0    
t0 = 0
p0 = 0.00178
t_values = [0.10853, 0.24055, 0.57925, 0.66071, 0.90564, 1.07741, 1.25799, 1.53798, 1.77359, 1.88437, 2.12657, 2.29181, 2.54327, 2.63489, 2.97731, 3.16202, 3.25366, 3.47937, 3.65211, 3.84979, 4.16897, 4.32536, 4.45015, 4.65665, 4.83748, 5.15986, 5.32239, 5.45209, 5.73897, 5.82461, 6.03584, 6.27605, 6.46934, 6.75232, 6.85507, 7.05939, 7.22493, 7.52973, 7.71752, 7.8849, 8.13515, 8.22238, 8.52828, 8.71466, 8.88555, 9.08234, 9.36484, 9.50326, 9.76934, 9.85512, 10.11068, 10.24345, 10.52221, 10.7276, 10.96392, 11.07545, 11.36622, 11.51038, 11.68816, 11.84758, 12.13026, 12.34937, 12.50267, 12.65937, 12.90805, 13.11286, 13.33336, 13.53756, 13.74937, 13.91912, 14.10603, 14.27015, 14.55074, 14.7017, 14.87056, 15.1301, 15.30756, 15.50291, 15.73764, 15.91486, 16.12513, 16.3662, 16.4484, 16.77233, 16.95325, 17.16009, 17.37652, 17.5466, 17.73315, 17.94807, 18.07143, 18.37743, 18.47942, 18.77942, 18.82514, 19.14956, 19.28186, 19.55345, 19.70942, 19.85691, 20.16467, 20.26304, 20.54187, 20.62527, 20.9576, 21.09585, 21.35072, 21.57173, 21.63623, 21.90005, 22.1525, 22.29674, 22.43174, 22.67602, 22.92525, 23.02232, 23.325, 23.42256, 23.64139, 23.97633, 24.16984, 24.24255, 24.53831, 24.72306, 24.94429, 25.03569, 25.37101, 25.44618, 25.71554, 25.92952, 26.08415, 26.31308, 26.52636, 26.70316, 26.94013, 27.08447, 27.28742, 27.52337, 27.62689, 27.90371, 28.145, 28.34541, 28.487, 28.70037, 28.9232, 29.14783, 29.28394, 29.44699, 29.72756, 29.8397, 30.09017, 30.33915, 30.55841, 30.7061, 30.88484, 31.13729, 31.36915, 31.51229, 31.63905, 31.97439, 32.11934, 32.33279, 32.56987, 32.71034, 32.87193, 33.04189, 33.22348, 33.49939, 33.74969, 33.84828, 34.10283, 34.24372, 34.42917, 34.67319, 34.82532, 35.07244, 35.23588, 35.47552, 35.62906, 35.90366, 36.17146, 36.3117, 36.53601, 36.71891, 36.97525, 37.16619, 37.33443, 37.54967, 37.67985, 37.87791, 38.14542, 38.30704, 38.52375, 38.66223, 38.95147, 39.09287, 39.31185, 39.54687, 39.62125, 39.97713, 40.04993, 40.25025, 40.5484, 40.68812, 40.94556, 41.04732, 41.27394, 41.42792, 41.72394, 41.85192, 42.04139, 42.31708, 42.51579, 42.74645, 42.88141, 43.0205, 43.32447, 43.56236, 43.67781, 43.89408, 44.12744, 44.28123, 44.49705, 44.71317, 44.91033, 45.05122, 45.30412, 45.50735, 45.74693, 45.8433, 46.0934, 46.27156, 46.48768, 46.6701, 46.89876, 47.09413, 47.32782, 47.53523, 47.62471, 47.96024, 48.10539, 48.30901, 48.57782, 48.71386, 48.84291, 49.14174, 49.265, 49.54633, 49.68323, 49.95632, 50.16175, 50.27593, 50.49692, 50.6247, 50.96956, 51.0843, 51.35219, 51.42834, 51.76164, 51.86333, 52.17256, 52.35202, 52.48953, 52.65738, 52.88847, 53.12516, 53.26118, 53.51892, 53.69864, 53.95282, 54.14576, 54.27617, 54.48973, 54.69888, 54.94633, 55.11218, 55.2885, 55.57964, 55.70457, 55.92387, 56.12342, 56.26435, 56.54338, 56.63305, 56.95569, 57.17275, 57.37501, 57.51493, 57.74449, 57.85668, 58.02894, 58.35032, 58.54699, 58.74788, 58.84545, 59.13451, 59.25666, 59.49802, 59.6311, 59.93618, 60.05777, 60.25959, 60.47831, 60.67895, 60.89717, 61.04172, 61.24929, 61.51325, 61.74055, 61.89204, 62.1583, 62.3661, 62.52465, 62.76908, 62.85882, 63.06744, 63.35195, 63.5433, 63.63759, 63.94216, 64.14268, 64.22097, 64.44733, 64.69161, 64.95937, 65.02065, 65.36502, 65.51857, 65.7782, 65.97089, 66.10894, 66.24089, 66.42252, 66.68724, 66.93012, 67.07767, 67.26558, 67.48108, 67.64544, 67.91293, 68.03814, 68.31692, 68.47318, 68.67793, 68.83331, 69.05067, 69.28267, 69.51959, 69.70011, 69.86565, 70.07317, 70.27615, 70.51609, 70.76273, 70.91471, 71.0975, 71.2629, 71.45576, 71.67048, 71.93667, 72.12145, 72.32053, 72.57919, 72.63121, 72.95974, 73.1665, 73.23554, 73.5573, 73.67443, 73.86836, 74.12781, 74.23103, 74.50825, 74.69533, 74.86462, 75.03194, 75.30859, 75.51529, 75.66079, 75.85199, 76.15753, 76.34385, 76.46464, 76.68255, 76.92781, 77.12781, 77.31011, 77.47516, 77.66887, 77.85795, 78.15099, 78.22546, 78.48507, 78.7123, 78.90324, 79.1357, 79.28927, 79.47354, 79.73871, 79.8978, 80.08298, 80.26228, 80.54599, 80.73735, 80.92877, 81.0917, 81.2299, 81.5392, 81.72441, 81.84537, 82.0608, 82.22979, 82.51773, 82.71978, 82.86619, 83.05727, 83.27906, 83.48901, 83.66528, 83.83624, 84.15428, 84.33245, 84.42943, 84.62187, 84.92259, 85.13915, 85.22158, 85.44889, 85.77551, 85.97332, 86.12878, 86.36578, 86.44735, 86.68048, 86.90203, 87.0521, 87.26004, 87.47538, 87.73394, 87.86581, 88.04797, 88.33185, 88.50904, 88.71432, 88.96526, 89.1051, 89.28787, 89.46983, 89.62568, 89.92182, 90.15191, 90.22833, 90.54756, 90.75567, 90.83469, 91.17164, 91.34702, 91.52285, 91.66229, 91.95105, 92.08796, 92.34683, 92.54747, 92.76273, 92.85355, 93.15848, 93.2395, 93.50733, 93.75416, 93.9242, 94.03205, 94.30142, 94.53091, 94.68678, 94.92658, 95.09438, 95.25738, 95.49054, 95.72049, 95.82979, 96.17669, 96.36103, 96.4268, 96.70357, 96.87676, 97.0818, 97.28807, 97.50714, 97.77778, 97.86325, 98.02549, 98.3395, 98.51985, 98.69906, 98.89034, 99.08769, 99.25561, 99.42831, 99.65736, 99.91426]
n = 500

r = rk4(f, t0, p0, t_values, n)

runge = []
for yi in r:
    runge.append(yi[1])
    
# solução exata:
# modificar valores de r, lambd e coef 
def p(t):
    r = 0.1842
    lambd = 0.02224
    k = r * lambd
    # resolver:
    # solve p'(t) = k * (1 - p(t)), p(0) = p0
    # no wolfram, substituindo o valor de p0 dado na questao
    coef = 0.00976
    return 1 - coef * math.exp(-k*t)
    
for i in range(500):
    print(f"{runge[i]}, 0,")