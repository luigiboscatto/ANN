from methods import *
import matplotlib.pyplot as plt
from math import *


x = [0.5561, 0.5623, 0.6313, 0.6876, 0.7764, 0.8079, 0.9061, 0.9474, 1.0112, 1.0636, 1.1192, 1.2061, 1.2373, 1.3054, 1.3586, 1.4113, 1.4935, 1.5639, 1.5821, 1.6529, 1.7299, 1.765, 1.856, 1.8704, 1.9483, 2.0427, 2.0903, 2.1553, 2.2071, 2.2366, 2.3301, 2.372, 2.4098, 2.494, 2.5372, 2.6337, 2.6932, 2.7142, 2.8071, 2.871, 2.8922, 2.9719]
y = [0.6254, 0.755, 1.1838, 1.3271, 1.7903, 1.2725, 1.9018, 3.3914, 2.1535, 2.6257, 4.8603, 4.796, 5.6633, 6.4257, 7.8873, 8.2579, 9.9361, 11.9431, 12.4464, 14.7361, 15.8874, 17.4743, 20.2057, 20.2436, 23.9342, 27.0421, 28.5153, 31.8953, 34.1234, 35.9237, 39.8132, 41.0108, 44.2486, 50.0196, 52.3073, 59.2547, 63.1488, 64.5295, 72.0453, 77.2758, 78.4455, 86.2344]
values = [1.1225, 1.1889, 1.5725, 2.0319, 2.6762]


#linearização, transformando y em ln(y) e x em ln(x)
for i in range(0, len(y)):
    y[i] = log(y[i])

for i in range(0, len(x)):
    x[i] = log(x[i])

    

z, b = best_poly(x,y, 1) 

a = exp(z) # a função te retorna um valor z = ln(a), então isola a e obtém a = exp(z)

print('Coefs:\n',f'{a}, {b}', end=',')

def p(x, a, b):
	return a * pow(x, b) 

print()
print('Values:\n')
for value in values:
    print(f'{(p(value, a, b))}', end=", ")
print("")
